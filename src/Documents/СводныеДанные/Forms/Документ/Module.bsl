
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда		
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Объект.Валюта = Справочники.Валюты.Доллар;
		Объект.ПроцентНалоговыйКредит = 3.5;
		Объект.РассчитыватьПоКурсу = Ложь;
		Объект.МетодРаспределения = РегистрыСведений.МетодРаспределения.ПолучитьПоследнее ( Неопределено ).Метод; 
		Если (  ЗначениеЗаполнено ( Параметры.Основание ) ) Тогда
			// код ...
		Иначе
			Объект.Организация = Константы.ОсновнаяОрганизация.Получить ();			
		КонецЕсли; 
		заполнитьКурс ();
	КонецЕсли;	
	установитьПараметрСписков ( Объект.Заявка );
	
КонецПроцедуры

&НаСервере
Процедура заполнитьКурс ()
	
	курсы = ОбщийДокументы.ПолучитьКурс ( ? ( Объект.Ссылка.Пустая (), ТекущаяДата (), Объект.Дата ), Объект.Валюта );
	Объект.Курс = курсы.Курс; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ДатаПриИзменении ( Элемент )
	
	заполнитьКурс ();
	рассчитатьСуммыТранспорт ();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПлатежаПриИзменении ( Элемент )
	
	рассчитатьСуммаПроценты ();
	распределитьСумму ( "СуммаПлатежа" );
	рассчитатьСуммаГТД ();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаБрокерскиеУслугиПриИзменении ( Элемент )
	
	распределитьСумму ( "СуммаБрокерскиеУслугиДоллар" );
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаЭкспедиторскиеУслугиПриИзменении ( Элемент )
	
	распределитьСумму ( "СуммаЭкспедиторскиеУслугиДоллар" );
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаПлатежаПриИзменении ( Элемент )
	
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаБрокерскиеУслугиПриИзменении ( Элемент )
	
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаЭкспедиторскиеУслугиПриИзменении ( Элемент )
	
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаПроцентыПриИзменении ( Элемент )
	
	данные = Элементы.Транспорт.ТекущиеДанные;
	Если ( Объект.РассчитыватьПоКурсу ) Тогда
		данные.СуммаПроцентыДоллар = ? ( Объект.Курс = 0, 0, данные.СуммаПроценты / Объект.Курс );	
	КонецЕсли; 
	рассчитатьСуммыПоСтроке ( данные ); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаПроцентыДолларПриИзменении ( Элемент )
	
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПоДокументуПриИзменении ( Элемент )
	
	рассчитатьЦену ();	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортПослеУдаления ( Элемент )
	
	рассчитатьЦену ();
	распределитьСумму ( "СуммаПлатежа" );
	распределитьСумму ( "СуммаБрокерскиеУслугиДоллар" );
	распределитьСумму ( "СуммаЭкспедиторскиеУслугиДоллар" );
	рассчитатьСуммыТранспорт ();
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортПриНачалеРедактирования ( Элемент, НоваяСтрока, Копирование )
	
	Если ( НоваяСтрока ) Тогда
		рассчитатьЦену ();
		распределитьСумму ( "СуммаПлатежа" );
		распределитьСумму ( "СуммаБрокерскиеУслугиДоллар" );
		распределитьСумму ( "СуммаЭкспедиторскиеУслугиДоллар" );
		рассчитатьСуммыТранспорт ();	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьСуммыПоСтроке ( Данные )
	
	Если ( Объект.РассчитыватьПоКурсу ) Тогда
		Данные.СуммаПлатежаДоллар = ? ( Объект.Курс = 0, 0, Данные.СуммаПлатежа / Объект.Курс );
		Данные.СуммаПроцентыДоллар = ? ( Объект.Курс = 0, 0, Данные.СуммаПроценты / Объект.Курс );
	Иначе
		// код ...
	КонецЕсли;
	Данные.СуммаПлатежа = Данные.СуммаСтрока020 + Данные.СуммаСтрока028;
	Данные.СуммаИтог = Данные.СуммаПлатежа - Данные.СуммаПроценты + Данные.СуммаБрокерскиеУслуги + Данные.СуммаЭкспедиторскиеУслуги;
	Данные.СуммаИтогДоллар = Данные.СуммаПлатежаДоллар - Данные.СуммаПроцентыДоллар + Данные.СуммаБрокерскиеУслугиДоллар + Данные.СуммаЭкспедиторскиеУслугиДоллар;
	Данные.СуммаДоходДоллар = Данные.ЦенаДоллар - Данные.СуммаИтогДоллар;
	Данные.СуммаДоход = Данные.Цена - Данные.СуммаИтог;
	рассчитатьРезультатИтог ( Данные );
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьСуммыТранспорт ()
	
	Для Каждого строкаТЧ Из Объект.Транспорт Цикл
		рассчитатьСуммыПоСтроке ( строкаТЧ );
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьЦену ()
	
	колво = Объект.Транспорт.Количество ();
	Если ( колво > 0 ) Тогда
		Если ( Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПустаяСсылка" )
					ИЛИ Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПоКоличествуТранспорта" ) ) Тогда
			цена = Объект.СуммаПоДокументу / колво;
			ценаДоллар = Объект.СуммаПоДокументуДоллар / колво;
			Для Каждого строкаТЧ Из Объект.Транспорт Цикл
				строкаТЧ.Цена = цена;
				строкаТЧ.ЦенаДоллар = ценаДоллар;
			КонецЦикла;
		ИначеЕсли ( Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПоВесу" ) ) Тогда 
			итогВес = Объект.Транспорт.Итог ( "Количество" );
			Если ( итогВес = 0 ) Тогда
				Сообщить ( "Итог по весу равен 0. Распределение невозможно!", СтатусСообщения.Обычное );   
				Для Каждого строкаТЧ Из Объект.Транспорт Цикл
					строкаТЧ.Цена = 0;
					строкаТЧ.ЦенаДоллар = 0;
				КонецЦикла;
			Иначе
				Для Каждого строкаТЧ Из Объект.Транспорт Цикл
					строкаТЧ.Цена = Объект.СуммаПоДокументу * строкаТЧ.Количество / итогВес;
					строкаТЧ.ЦенаДоллар = ценаДоллар * строкаТЧ.Количество / итогВес;
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура распределитьСумму ( ИмяКолонки )
	
	колвоТранспорт = Объект.Транспорт.Количество ();              
	Если ( колвоТранспорт = 0 ) Тогда
		Сообщить ( "Не заполнена табличная часть ""Транспорт""!", СтатусСообщения.Обычное );
		Возврат;
	КонецЕсли;
	Если ( Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПустаяСсылка" )
				ИЛИ Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПоКоличествуТранспорта" ) ) Тогда
		суммаПоСтроке = Объект [ ИмяКолонки ] / колвоТранспорт;
		Для Каждого строкаТЧ Из Объект.Транспорт Цикл
			строкаТЧ [ ИмяКолонки ] = суммаПоСтроке;		
		КонецЦикла;
	ИначеЕсли ( Объект.МетодРаспределения = ПредопределенноеЗначение ( "Перечисление.МетодРаспределения.ПоВесу" ) ) Тогда 
		итогВес = Объект.Транспорт.Итог ( "Количество" );
		Если ( итогВес = 0 ) Тогда
			Сообщить ( "Итог по весу равен 0. Распределение невозможно!", СтатусСообщения.Обычное );   
			Для Каждого строкаТЧ Из Объект.Транспорт Цикл
				строкаТЧ [ ИмяКолонки ] = 0;		
			КонецЦикла;
		Иначе
			Для Каждого строкаТЧ Из Объект.Транспорт Цикл
				строкаТЧ [ ИмяКолонки ] = Объект [ ИмяКолонки ] * строкаТЧ.Количество / итогВес;		
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;
	рассчитатьСуммыТранспорт ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	установитьЗаголовкиКолонок ();
	
КонецПроцедуры

&НаКлиенте
Процедура установитьЗаголовкиКолонок ()
	
	Элементы.ТранспортГруппаПроценты.Заголовок = "" + Объект.ПроцентНалоговыйКредит + " %"; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроцентНалоговыйКредитПриИзменении ( Элемент )
	
	установитьЗаголовкиКолонок ();
	рассчитатьСуммаПроценты ();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБрокерскиеУслуги ( Команда )
	
	заполнитьБрокерскиеУслугиСервер ( Объект.Заявка );	
	Модифицированность = Истина;
	распределитьСумму ( "СуммаБрокерскиеУслуги" );
	распределитьСумму ( "СуммаБрокерскиеУслугиДоллар" );
	
КонецПроцедуры

&НаСервере
Процедура заполнитьБрокерскиеУслугиСервер ( Контроль )
	
	с = "
	|выбрать
	|	СуммаПоДокументуДоллар как СуммаБрокерскиеУслугиДоллар,
	|	СуммаПоДокументу как СуммаБрокерскиеУслуги
	|из
	|	Документ.БрокерскиеУслуги
	|где
	|	Контроль = &Контроль
	|	и Проведен 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Контроль", Контроль );
	результат = запрос.Выполнить ();
	выборка = результат.Выбрать ();
	Объект.СуммаБрокерскиеУслуги = 0 ;
	Объект.СуммаБрокерскиеУслугиДоллар = 0;
	Пока ( выборка.Следующий () ) Цикл
		Объект.СуммаБрокерскиеУслуги = Объект.СуммаБрокерскиеУслуги + выборка.СуммаБрокерскиеУслуги;
		Объект.СуммаБрокерскиеУслугиДоллар = Объект.СуммаБрокерскиеУслугиДоллар + выборка.СуммаБрокерскиеУслугиДоллар;
	КонецЦикла; 

КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьЭкспедиторскиеУслуги ( Команда )
	
	заполнитьЭкспедиторскиеУслугиСервер ( Объект.Заявка );	
	Модифицированность = Истина;
	распределитьСумму ( "СуммаЭкспедиторскиеУслуги" );
	распределитьСумму ( "СуммаЭкспедиторскиеУслугиДоллар" );
	
КонецПроцедуры

&НаСервере
Процедура заполнитьЭкспедиторскиеУслугиСервер ( Контроль )
	
	с = "
	|выбрать
	|	СуммаПоДокументуДоллар как СуммаЭкспедиторскиеУслугиДоллар,
	|	СуммаПоДокументу как СуммаЭкспедиторскиеУслуги
	|из
	|	Документ.ЭкспедиторскиеУслуги
	|где
	|	Контроль = &Контроль
	|	и Проведен 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Контроль", Контроль );
	результат = запрос.Выполнить ();
	выборка = результат.Выбрать ();
	Объект.СуммаЭкспедиторскиеУслуги = 0 ;
	Объект.СуммаЭкспедиторскиеУслугиДоллар = 0;
	Пока ( выборка.Следующий () ) Цикл
		Объект.СуммаЭкспедиторскиеУслуги = Объект.СуммаЭкспедиторскиеУслуги + выборка.СуммаЭкспедиторскиеУслуги;
		Объект.СуммаЭкспедиторскиеУслугиДоллар = Объект.СуммаЭкспедиторскиеУслугиДоллар + выборка.СуммаЭкспедиторскиеУслугиДоллар;
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура СуммаИнвойсаПриИзменении ( Элемент )
	
	рассчитатьСуммаПроценты ();
	рассчитатьСуммаГТД ();
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьСуммаГТД ()
	
	Объект.СуммаГТД = Объект.СуммаПлатежа + Объект.СуммаИнвойса * Объект.Курс;    
	
КонецПроцедуры 

&НаКлиенте
Процедура КурсПриИзменении ( Элемент )
	
	рассчитатьСуммаПроценты ();	
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьСуммаПроценты ()
	
	Объект.СуммаПроценты = ( Объект.СуммаПлатежа + Объект.СуммаИнвойса * Объект.Курс ) * Объект.ПроцентНалоговыйКредит / 100;
	распределитьСумму ( "СуммаПроценты" );	
	
КонецПроцедуры 

&НаКлиенте
Процедура РассчитыватьПоКурсуПриИзменении ( Элемент )
	
	рассчитатьСуммаПроценты ();
	рассчитатьСуммаГТД ();	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСумммаДоходПриИзменении ( Элемент )
	
	рассчитатьРезультатИтог ( Элементы.Транспорт.ТекущиеДанные );	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСумммаДоходДолларПриИзменении ( Элемент )
	
	рассчитатьРезультатИтог ( Элементы.Транспорт.ТекущиеДанные );
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьРезультатИтог ( Данные )
	
	Если ( Объект.Курс = 0 ) Тогда
		Данные.СуммаРезультат = 0;
	Иначе
		Данные.СуммаРезультат = Данные.СуммаДоходДоллар + Данные.СуммаДоход / Объект.Курс; 
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьСчетКлиента ( Команда )
	
	м = Новый Массив ();
	Для Каждого строкаТЧ Из Объект.Транспорт Цикл
		м.Добавить ( строкаТЧ.Транспорт );		
	КонецЦикла; 
	суммы = получитьДопРасходыКлиент ( м );
	Объект.СуммаПоДокументуДоллар = суммы.СуммаДопРасходыКлиентаДоллар;
	Объект.СуммаПоДокументу = суммы.СуммаДопРасходыКлиента;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция получитьДопРасходыКлиент ( Транспорт )
	
	с = "
	|выбрать
	|	СуммаДопРасходыКлиента как СуммаДопРасходыКлиента,
	|	СуммаДопРасходыКлиентаДоллар как СуммаДопРасходыКлиентаДоллар
	|из
	|	Документ.БрокерскиеУслуги.Транспорт
	|где
	|	Транспорт в ( &Транспорт )
	|	и Ссылка.Проведен
	|объединить все
	|выбрать
	|	СуммаДопРасходыКлиента как СуммаДопРасходыКлиента,
	|	СуммаДопРасходыКлиентаДоллар как СуммаДопРасходыКлиентаДоллар
	|из
	|	Документ.ЭкспедиторскиеУслуги.Транспорт
	|где
	|	Транспорт в ( &Транспорт )
	|	и Ссылка.Проведен
	|объединить все
	|выбрать
	|	Цена как Цена,
	|	ЦенаДоллар как ЦенаДоллар
	|из
	|	Документ.Заявка.Транспорт
	|где
	|	Транспорт в ( &Транспорт )
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Транспорт", Транспорт );
	таблица = запрос.Выполнить ().Выгрузить ();
	таблица.Свернуть ( "", "СуммаДопРасходыКлиента, СуммаДопРасходыКлиентаДоллар" );	
	п = Новый Структура ();
	п.Вставить ( "СуммаДопРасходыКлиента", таблица [ 0 ].СуммаДопРасходыКлиента );  
	п.Вставить ( "СуммаДопРасходыКлиентаДоллар", таблица [ 0 ].СуммаДопРасходыКлиентаДоллар );
	Возврат п;
	
КонецФункции 

&НаКлиенте
Процедура ТранспортСуммаСтрока020ПриИзменении ( Элемент )
	
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );
	рассчитатьСуммуПлатежа ();
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаСтрока028ПриИзменении ( Элемент )
	                                                                    
	рассчитатьСуммыПоСтроке ( Элементы.Транспорт.ТекущиеДанные );
	рассчитатьСуммуПлатежа ();
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьСуммуПлатежа ()	
	
	Объект.СуммаПлатежа = 0;
	Для Каждого строкаТЧ Из Объект.Транспорт Цикл
		Объект.СуммаПлатежа = Объект.СуммаПлатежа + строкаТЧ.СуммаПлатежа;  
	КонецЦикла;
	рассчитатьСуммаПроценты ();
	распределитьСумму ( "СуммаПлатежа" );
	рассчитатьСуммаГТД ();
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере ( ТекущийОбъект, ПараметрыЗаписи )
	
	установитьПараметрСписков ( ТекущийОбъект.Заявка );
	
КонецПроцедуры

&НаСервере
Процедура установитьПараметрСписков ( Заявка )
	
	БрокерскиеУслуги.Параметры.УстановитьЗначениеПараметра ( "Контроль", Неопределено ); // Документы.Контроль.ПустаяСсылка () );
	ЭкспедиторскиеУслуги.Параметры.УстановитьЗначениеПараметра ( "Контроль", Неопределено ); // Документы.Контроль.ПустаяСсылка () );	
	
КонецПроцедуры