
Функция Проведение ( Данные ) Экспорт
	
	получитьДанныеДокумента ( Данные );
	// сформироватьВзаиморасчеты ( Данные );
	сформироватьДенежныеСредства ( Данные );
	сформироватьДвиженияДенежныхСредств ( Данные );
	// сформироватьДоходыРасходы ( Данные );
	установитьФлагиЗаписи ( Данные );
	Возврат Истина;
	
КонецФункции

Процедура получитьДанныеДокумента ( Данные )
	
	текст = "
	|// ~Шапка
	|ВЫБРАТЬ 
	|	Ссылка как Ссылка, Номер как Номер, Дата как Период,
	|	ДатаОперации как ДатаОперации, ГТД как ГТД, Дата как Дата, 
	|	Счет как Счет, Контрагент как Контрагент, НазначениеПлатежа как НазначениеПлатежа,
	|	НомерКвитанции как НомерКвитанции, Основание как Основание, Сумма как Сумма, 
	|	Валюта как Валюта, Организация как Организация, СтатьяДДС как СтатьяДДС,
	|	СуммаДоллар как СуммаДоллар 
	|из
	|	Документ.ПлатежноеПоручениеВходящее
	|где
	|	Ссылка = &Ссылка
	|;
	|выбрать
	|	Транспорт как Транспорт, Сумма как Сумма,
	|	СуммаДоллар как СуммаДоллар
	|из
	|	Документ.ПлатежноеПоручениеВходящее.Транспорт
	|где
	|	Ссылка = &Ссылка
	|упорядочить по
	|	НомерСтроки
	|;
	|выбрать
	|	Курс как Курс
	|из
	|	РегистрСведений.КурсыВалют.СрезПоследних ( &Дата, Валюта = значение ( Справочник.Валюты.Доллар ) )  
	|";
	запрос = Новый Запрос ( текст );
	запрос.УстановитьПараметр ( "Ссылка", Данные.Ссылка );
	запрос.УстановитьПараметр ( "Дата", Данные.Дата );
	результат = запрос.ВыполнитьПакет ();
	выборкаШапка = результат [ 0 ].Выбрать ();
	выборкаШапка.Следующий ();
	Данные.Вставить ( "Шапка", выборкаШапка );
	Данные.Вставить ( "Транспорт", результат [ 1 ].Выгрузить () );
	выборкаКурс = результат [ 2 ].Выбрать ();
	выборкаКурс.Следующий ();
	Данные.Вставить ( "Курс", выборкаКурс.Курс ); 

КонецПроцедуры

Процедура сформироватьВзаиморасчеты ( Данные )
	
	п = Данные.Шапка;
	Если ( п.Сумма <> 0 ) Тогда
		движение = Данные.Движения.Взаиморасчеты.ДобавитьРасход ();
		движение.Период = п.Дата;
		движение.Контрагент = п.Контрагент;
		движение.Заявка = п.Заявка;
		движение.Валюта = Справочники.Валюты.Гривна;
		движение.Организация = п.Организация;
		движение.Сумма = п.Сумма;
	КонецЕсли;
	Если ( п.СуммаДоллар <> 0 ) Тогда
		движение = Данные.Движения.Взаиморасчеты.ДобавитьРасход ();
		движение.Период = п.Дата;
		движение.Контрагент = п.Контрагент;
		движение.Заявка = п.Заявка;
		движение.Валюта = Справочники.Валюты.Доллар;
		движение.Организация = п.Организация;
		движение.Сумма = п.СуммаДоллар;
	КонецЕсли;
	
КонецПроцедуры

Процедура сформироватьДенежныеСредства ( Данные )
	
	п = Данные.Шапка;
	Если ( п.Сумма <> 0 ) Тогда
		движение = Данные.Движения.ДенежныеСредства.ДобавитьПриход ();
		движение.Период = п.Дата;
		движение.Казна = п.Счет;
		движение.Валюта = Справочники.Валюты.Гривна;
		движение.Сумма = п.Сумма;
	КонецЕсли;
	Если ( п.СуммаДоллар <> 0 ) Тогда
		движение = Данные.Движения.ДенежныеСредства.ДобавитьПриход ();
		движение.Период = п.Дата;
		движение.Казна = п.Счет;
		движение.Валюта = Справочники.Валюты.Доллар;
		движение.Сумма = п.СуммаДоллар;
	КонецЕсли;
	
КонецПроцедуры

Процедура сформироватьДвиженияДенежныхСредств ( Данные )
	
	п = Данные.Шапка;
	Если ( п.Сумма <> 0 ) Тогда
		движение = Данные.Движения.ДвиженияДенежныхСредств.Добавить ();
		движение.Период = п.Дата;
		движение.Казна = п.Счет;
		движение.Валюта = Справочники.Валюты.Гривна;
		движение.Организация = п.Организация;
		движение.СтатьяДДС = п.СтатьяДДС;
		движение.СуммаПриход = п.Сумма;
		движение.СуммаРасход = 0;
	КонецЕсли;
	Если ( п.СуммаДоллар <> 0 ) Тогда
		движение = Данные.Движения.ДвиженияДенежныхСредств.Добавить ();
		движение.Период = п.Дата;
		движение.Казна = п.Счет;
		движение.Валюта = Справочники.Валюты.Доллар;
		движение.Организация = п.Организация;
		движение.СтатьяДДС = п.СтатьяДДС;
		движение.СуммаПриход = п.СуммаДоллар;
		движение.СуммаРасход = 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура сформироватьДоходыРасходы ( Данные )
	
	п = Данные.Шапка;
	Для Каждого строкаТЧ Из Данные.Транспорт Цикл
		// доходы
		Если ( строкаТЧ.Сумма <> 0 ) Тогда
			движение = добавитьДвижение ( Данные, строкаТЧ );
			движение.Валюта = Справочники.Валюты.Гривна;
			движение.СуммаДоход = строкаТЧ.Сумма;
			движение.ВидОперации = Перечисления.ВидОперацииДоходыРасходы.Оплата;
			движение.Курс = 1;
		КонецЕсли;
		Если ( строкаТЧ.СуммаДоллар <> 0 ) Тогда
			движение = добавитьДвижение ( Данные, строкаТЧ );
			движение.Валюта = Справочники.Валюты.Доллар;
			движение.СуммаДоход = строкаТЧ.СуммаДоллар;
			движение.ВидОперации = Перечисления.ВидОперацииДоходыРасходы.Оплата;
			движение.Курс = Данные.Курс;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Функция добавитьДвижение ( Данные, СтрокаТЧ )
	
	движение = Данные.Движения.ДоходыРасходы.Добавить ();
	движение.Период = Данные.Дата;
	движение.Заявка = Данные.Шапка.Заявка;
	движение.Организация = Данные.Шапка.Организация;
	движение.Транспорт = СтрокаТЧ.Транспорт;
	движение.Номенклатура = Справочники.Номенклатура.ПустаяСсылка ();
	Возврат движение;

КонецФункции

Процедура установитьФлагиЗаписи ( Данные )
	
	Данные.Движения.Взаиморасчеты.Записывать = Истина;
	Данные.Движения.ДенежныеСредства.Записывать = Истина;
	Данные.Движения.ДвиженияДенежныхСредств.Записывать = Истина;
	Данные.Движения.ДоходыРасходы.Записывать = Истина;
	
КонецПроцедуры