
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	РольКассир = ( РольДоступна ( "Кассир" ) И НЕ РольДоступна ( "ПолныеПрава" ) );
	Если ( Объект.Ссылка.Пустая () ) Тогда
		начальноеЗаполнение ();
	Иначе
		Если ( Объект.ВидОперации = Перечисления.ВидОперацииПриходныйКассовыйОрдер.Конвертация ) Тогда
			ДокументРКО = получитьДокументРКО ( Объект.Ссылка );
		ИначеЕсли ( Объект.ВидОперации = Перечисления.ВидОперацииПриходныйКассовыйОрдер.ПеремещениеИзКассы ) Тогда
			ДокументРКО = получитьДокументРКО ( Объект.Ссылка );
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура начальноеЗаполнение ()
	
	ОбщийДокументы.НачальноеЗаполнение ( Объект );
	Объект.Организация = Константы.ОсновнаяОрганизация.Получить ();
	Если ( РольКассир ) Тогда
		Объект.Касса = ПараметрыСеанса.ТекущийПользователь.ОсновнаяКасса;
	Иначе
		Объект.Касса = Константы.ОсновнаяКасса.Получить ();	
	КонецЕсли; 
	Объект.ВидОперации = Перечисления.ВидОперацииПриходныйКассовыйОрдер.ОплатаКлиента;
	Если ( Параметры.ЗначенияЗаполнения.Свойство ( "ВидОперации" ) ) Тогда
		Если ( ЗначениеЗаполнено ( Параметры.ЗначенияЗаполнения.ВидОперации ) ) Тогда
			Объект.ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция получитьДокументРКО ( ПКО )
	
	с = "
	|выбрать разрешенные
	|	Ссылка как Ссылка
	|из
	|	Документ.РасходныйКассовыйОрдер
	|где
	|	ДокументПКО = &ПКО  
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "ПКО", ПКО );
	результат = запрос.Выполнить ();
	рко = Документы.РасходныйКассовыйОрдер.ПустаяСсылка ();
	Если ( НЕ результат.Пустой () ) Тогда
		выборка = результат.Выбрать ();
		выборка.Следующий ();
		рко = выборка.Ссылка;
	КонецЕсли;
	Возврат рко;

КонецФункции 

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	установитьВидимость ();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении ( Элемент )
	
	установитьВидимость ();
	
КонецПроцедуры

&НаКлиенте
Процедура установитьВидимость ()
	
	Элементы.ГруппаСвязанныйДокумент.Видимость = ( Объект.ВидОперации = ПредопределенноеЗначение ( "Перечисление.ВидОперацииПриходныйКассовыйОрдер.Конвертация" ) );  
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатыКурсПриИзменении ( Элемент )
	
	данные = Элементы.Оплаты.ТекущиеДанные;
	Если ( Объект.Валюта = ПредопределенноеЗначение ( "Справочник.Валюты.Доллар" ) ) Тогда
		Если ( данные.Валюта = ПредопределенноеЗначение ( "Справочник.Валюты.Гривна" ) ) Тогда
			данные.Сумма = Объект.Сумма * данные.Курс;
		КонецЕсли;
	ИначеЕсли ( Объект.Валюта = ПредопределенноеЗначение ( "Справочник.Валюты.Гривна" ) ) Тогда
		Если ( данные.Валюта = ПредопределенноеЗначение ( "Справочник.Валюты.Доллар" ) И данные.Курс <> 0 ) Тогда
			данные.Сумма =Объект.Сумма / данные.Курс;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи ( ПараметрыЗаписи )
	
	Оповестить ( "ИзменениеКассовыхДокументов", , Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении ( Элемент )
	
	Если ( Объект.Оплаты.Количество () = 0 ) Тогда
		новая = Объект.Оплаты.Добавить ();
		новая.Валюта = Объект.Валюта;
		новая.Курс = 1;
		новая.Сумма = Объект.Сумма;
	Иначе
		строкаТЧ = Объект.Оплаты [ 0 ];
		Если ( строкаТЧ.Валюта = Объект.Валюта ) Тогда
			строкаТЧ.Сумма = Объект.Сумма; 
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатыСуммаПриИзменении ( Элемент )
	
	текущиеДанные = Элементы.Оплаты.ТекущиеДанные;
	Если ( текущиеДанные <> Неопределено ) Тогда
		Если ( текущиеДанные.НомерСтроки = 1 
				И текущиеДанные.Валюта = Объект.Валюта ) Тогда
			Объект.Сумма = текущиеДанные.Сумма; 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СчетНаОплатуПриИзменении ( Элемент )
	
	ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросЗаполнитьПоСчету", ЭтотОбъект ), "Заполнить документ по счету?", РежимДиалогаВопрос.ДаНет );
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьПоСчету ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		заполнитьПоСчетуСервер ();
	КонецЕсли; 
	
КонецПроцедуры  

&НаСервере
Процедура заполнитьПоСчетуСервер ()
	
	_объект = РеквизитФормыВЗначение ( "Объект" );
	_объект.Заполнить ( Объект.СчетНаОплату );
	ЗначениеВРеквизитФормы ( _объект, "Объект" ); 
	
КонецПроцедуры 