
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		начальноеЗаполнение ();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура начальноеЗаполнение ()
	
	Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Объект.Валюта = Справочники.Валюты.Доллар; 
	Объект.Курс = получитьКурс ( ? ( Объект.Ссылка.Пустая (), ТекущаяДата (), Объект.Дата ), Объект.Валюта );
	Если (  ЗначениеЗаполнено ( Параметры.Основание ) ) Тогда
		// код ...
	Иначе
		Объект.Организация = Константы.ОсновнаяОрганизация.Получить ();			
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьКурс ( Дата, Валюта )
	
	курсы = ОбщийДокументы.ПолучитьКурс ( Дата, Валюта );
	Возврат курсы.Курс;

КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоГТД ( Команда )
	
	Если ( ЗначениеЗаполнено ( Объект.ГТД ) ) Тогда
		Если ( Объект.Транспорт.Количество () > 0 ) Тогда
			ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросЗаполнитьПоГТД", ЭтотОбъект ), "Очистить и заполнить табличную часть ""Транспорт""?", РежимДиалогаВопрос.ДаНетОтмена );
		Иначе
			заполнитьПоГТДСервер ();
		КонецЕсли;
	Иначе
		Сообщить ( "Не выбран документ ""ГТД""!", СтатусСообщения.Важное );
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьПоГТД ( Ответ, Парам ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Отмена ) Тогда
		Возврат;
	ИначеЕсли ( Ответ = КодВозвратаДиалога.Да ) Тогда
		Объект.Транспорт.Очистить (); 
	КонецЕсли;
	заполнитьПоГТДСервер ();
	
КонецПроцедуры 

&НаСервере
Процедура заполнитьПоГТДСервер ()
	
	с = "
	|выбрать
	|	Контрагент как Контрагент, Номенклатура как Номенклатура, Транспорт как Транспорт
	|из
	|	Документ.СводныеДанные.Транспорт
	|где
	|	Ссылка = &СводныеДанные
	|упорядочить по
	|	НомерСтроки 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "СводныеДанные", Объект.ГТД );
	результат = запрос.Выполнить ();
	выборка = результат.Выбрать ();
	Пока ( выборка.Следующий () ) Цикл
		новаяСтрока = Объект.Транспорт.Добавить ();
		ЗаполнитьЗначенияСвойств ( новаяСтрока, выборка ); 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаПриИзменении ( Элемент )
	
	рассчитатьИтоги ( Элементы.Транспорт.ТекущиеДанные );	
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаРасчетнаяПриИзменении ( Элемент )
	
	рассчитатьСвязанноеПоле ( Элемент.Имя );
	
КонецПроцедуры

&НаКлиенте
Процедура рассчитатьИтоги ( Данные )
	
	Данные.СуммаИтого = Данные.СуммаДопРасходы + Данные.СуммаСтоянка + Данные.СуммаЦеноваяСправка;						
	Данные.СуммаИтогоДоллар = Данные.СуммаВБДоллар + Данные.СуммаВКДВДоллар + Данные.СуммаВыпускДоллар
						+ Данные.СуммаГрузчикиДоллар + Данные.СуммаДопРасходыДоллар + Данные.СуммаИнСобДоллар
						+ Данные.СуммаНачДоллар + Данные.СуммаОБКДоллар + Данные.СуммаПатонДоллар
						+ Данные.СуммаПрограммаДоллар + Данные.СуммаРегДоллар + Данные.СуммаСБУДоллар
						+ Данные.СуммаТарифДоллар + Данные.СуммаЦеноваяСправкаДоллар + Данные.СуммаСЭСДоллар;
	Объект.СуммаПоДокументу = 0;
	Объект.СуммаПоДокументуДоллар = 0;
	Для Каждого строкаТЧ Из Объект.Транспорт Цикл
		Объект.СуммаПоДокументу = Объект.СуммаПоДокументу + строкаТЧ.СуммаИтого;
		Объект.СуммаПоДокументуДоллар = Объект.СуммаПоДокументуДоллар + строкаТЧ.СуммаИтогоДоллар;  
	КонецЦикла; 
	
КонецПроцедуры 

&НаКлиенте
Процедура рассчитатьСвязанноеПоле ( Знач ИмяЭлемента )
	
	текущиеДанные = Элементы.Транспорт.ТекущиеДанные;
	//ИмяЭлемента = СтрЗаменить ( ИмяЭлемента, "Транспорт", "" );
	//Если ( СтрНайти ( ИмяЭлемента, "Доллар" ) ) = 0 Тогда
	//	// гривна
	//	имяРасчетногоПоля = ИмяЭлемента + "Доллар";
	//	Если ( Объект.Курс = 0 ) Тогда
	//		текущиеДанные [ имяРасчетногоПоля ] = 0;  
	//	Иначе
	//		текущиеДанные [ имяРасчетногоПоля ] = текущиеДанные [ ИмяЭлемента ] / Объект.Курс;
	//	КонецЕсли; 
	//Иначе
	//	// доллар
	//	имяРасчетногоПоля = СтрЗаменить ( ИмяЭлемента, "Доллар", "" );
	//	текущиеДанные [ имяРасчетногоПоля ] = текущиеДанные [ ИмяЭлемента ] * Объект.Курс;
	//КонецЕсли;
	рассчитатьИтоги ( текущиеДанные );
	
КонецПроцедуры

&НаКлиенте
Процедура ГТДПриИзменении ( Элемент )
	
	Если ( ЗначениеЗаполнено ( Объект.Контроль ) ) Тогда
		ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросОЗаполнении", ЭтотОбъект ), "Заполнить на основании документа ""Контроль""?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет );
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗаполнении ( Ответ, Парам ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		заполнитьНаСервере ();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура заполнитьНаСервере ()
	
	_объект = РеквизитФормыВЗначение ( "Объект" );
	_объект.ОбработкаЗаполнения ( Объект.Контроль, Истина );
	ЗначениеВРеквизитФормы ( _объект, "Объект" );
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортСуммаСЭСДолларПриИзменении ( Элемент )
	
	рассчитатьИтоги ( Элементы.Транспорт.ТекущиеДанные );	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении ( Элемент )
	
	Объект.Курс = получитьКурс ( ? ( Объект.Ссылка.Пустая (), ТекущаяДата (), Объект.Дата ), Объект.Валюта );
	
КонецПроцедуры