
Процедура ПередЗаписью ( Отказ, РежимЗаписи, РежимПроведения )
	
	Если ( ОбменДанными.Загрузка ) Тогда
		Возврат;
	КонецЕсли;
	Если ( ВидОперации = Перечисления.ВидОперацииРасходныйКассовыйОрдер.ПеремещениеВКассу ) Тогда
		заполнитьОплаты ();		
	КонецЕсли;
	Если ( ПометкаУдаления И ЗначениеЗаполнено ( ДокументПКО ) ) Тогда
		// помечаем на удаление
		докОбъект = ДокументПКО.ПолучитьОбъект ();
		докОбъект.ПометкаУдаления = Истина;
		докОбъект.Проведен = Ложь;
		докОбъект.Записать ();
	КонецЕсли; 
	
КонецПроцедуры

Процедура заполнитьОплаты ()
	
	колвоСтрок = Оплаты.Количество ();
	Если ( колвоСтрок = 0 ) Тогда
		новая = Оплаты.Добавить ();
		новая.Валюта = Валюта;
		новая.Сумма = Сумма;
	ИначеЕсли ( колвоСтрок = 1 ) Тогда 
		строкаТЧ = Оплаты [ 0 ];  
		Если ( Валюта = строкаТЧ.Валюта ) Тогда
			строкаТЧ.Курс = 1;
		КонецЕсли;	
	Иначе
		// мультивалютный документ
	КонецЕсли; 
	
КонецПроцедуры	

Процедура заполнитьДополнительныеСвойства ()
	
	ДополнительныеСвойства.Вставить ( "Перепроведение", Проведен );
	ДополнительныеСвойства.Вставить ( "ОперативноеПроведение", ( ЭтоНовый () И НачалоДня ( Дата ) = НачалоДня ( ТекущаяДата () ) ) ); 
	
КонецПроцедуры 

Процедура ОбработкаПроведения ( Отказ, РежимПроведения )
	
	заполнитьДополнительныеСвойства	();
	данные = Новый Структура ();
	данные.Вставить ( "Ссылка", Ссылка );
	данные.Вставить ( "Дата", Дата );
	данные.Вставить ( "Движения", Движения );
	данные.Вставить ( "МоментВремени", МоментВремени () );
	данные.Вставить ( "ДополнительныеСвойства", ДополнительныеСвойства );
	Отказ = НЕ Документы.РасходныйКассовыйОрдер.Проведение ( данные );
	
КонецПроцедуры

Процедура ОбработкаЗаполнения ( ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка )
	
	типДанныеЗаполнения = ТипЗнч ( ДанныеЗаполнения );
	Если ( типДанныеЗаполнения = Тип ( "ДокументСсылка.ГТД" ) ) Тогда
		заполнитьПоГТД ( ДанныеЗаполнения );
	ИначеЕсли ( типДанныеЗаполнения = Тип ( "ДокументСсылка.ПриходныйКассовыйОрдер" ) ) Тогда 
		заполнитьПоПКО ( ДанныеЗаполнения );
	ИначеЕсли ( типДанныеЗаполнения = Тип ( "ДокументСсылка.ЗаявкаНаРасходДС" ) ) Тогда 
		заполнитьПоЗаявке ( ДанныеЗаполнения );
	КонецЕсли; 
	
КонецПроцедуры

Процедура заполнитьПоПКО ( ПКО )
	
	с = "
	|выбрать
	|	ВидОперации как ВидОперации, 
	|	Ссылка как Ссылка, 
	|	Контрагент как Контрагент,
	|	Касса как Касса,
	|	Организация как Организация,
	|	СтатьяДДС как СтатьяДДС
	|из
	|	Документ.ПриходныйКассовыйОрдер
	|где
	|	Ссылка = &ПКО  
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "ПКО", ПКО );
	результат = запрос.Выполнить ();
	Если ( результат.Пустой () ) Тогда
		// код ...
	Иначе
		выборка = результат.Выбрать ();
		выборка.Следующий ();
		Если ( выборка.ВидОперации = Перечисления.ВидОперацииПриходныйКассовыйОрдер.Конвертация ) Тогда
			Контрагент = выборка.Контрагент;
			Касса = выборка.Касса;
			Организация = выборка.Организация;
			СтатьяДДС = выборка.СтатьяДДС;
			ДокументПКО = выборка.Ссылка;
			ВидОперации = Перечисления.ВидОперацииРасходныйКассовыйОрдер.Конвертация;
		Иначе
			ВызватьИсключение ( "Можно создавать документ на основании, только если вид операции ""Конвертация""!" );
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

Процедура заполнитьПоГТД  ( ДанныеЗаполнения )
	
	данные = получитьДанныеГТД ( ДанныеЗаполнения );
	Сумма = данные.Сумма;
	Контрагент = данные.Контрагент;
	ГТД = данные.ГТД;
	Организация = данные.Организация;
	ДатаОперации = ТекущаяДата ();
	
КонецПроцедуры 

Функция получитьДанныеГТД ( ГТД )
	
	с = "
	|выбрать
	|	сумма ( естьnull ( ТЧТранспорт.Цена, 0 ) ) как Сумма,
	|	ДокГТД.Контрагент как Контрагент, ДокГТД.Ссылка как ГТД,
	|	ДокГТД.Организация как Организация
	|из
	|	Документ.ГТД как ДокГТД
	|	левое соединение Документ.ГТД.Транспорт как ТЧТранспорт
	|	по ТЧТранспорт.Ссылка = &ГТД  
	|где
	|	ДокГТД.Ссылка = &ГТД
	|сгруппировать по
	|	ДокГТД.Ссылка 
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "ГТД", ГТД );
	результат = запрос.Выполнить ();
	выборка = результат.Выбрать ();
	выборка.Следующий ();	
	Возврат выборка;

КонецФункции

Процедура заполнитьПоЗаявке ( Заявка )
	
	с = "
	|выбрать
	|	Ссылка как Ссылка, 
	|	ДатаЗаявки как ДатаЗаявки, 
	|	ДатаПлатежа как ДатаПлатежа, 
	|	Заявитель как Заявитель,
	|	Оплачена как Оплачена,
	|	Получатель как Получатель,
	|	Приоритет как Приоритет,
	|	СтатусЗаявки как СтатусЗаявки,
	|	СтатьяДДС как СтатьяДДС,
	|	Организация как Организация,
	|	Валюта как Валюта,
	|	Комментарий как Комментарий,
	|	Ответственный как Ответственый,
	|	Сумма как Сумма 
	|из
	|	Документ.ЗаявкаНаРасходДС
	|где
	|	Ссылка = &Заявка  
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Заявка", Заявка );
	результат = запрос.Выполнить ();
	Если ( результат.Пустой () ) Тогда
		// код ...
	Иначе
		выборка = результат.Выбрать ();
		выборка.Следующий ();
		Валюта = выборка.Валюта;
		Сумма = выборка.Сумма;
		Сотрудник = выборка.Получатель;
		Организация = выборка.Организация;
		СтатьяДДС = выборка.СтатьяДДС;
		Основание = выборка.Ссылка;
		ВидОперации = Перечисления.ВидОперацииРасходныйКассовыйОрдер.ВыдачаВПодотчет;
		новая = Оплаты.Добавить ();
		новая.Сумма = Сумма;
		новая.Валюта = Валюта;
		новая.Курс = 1;
	КонецЕсли;
	
КонецПроцедуры